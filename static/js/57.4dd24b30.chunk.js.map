{"version":3,"file":"static/js/57.4dd24b30.chunk.js","mappings":"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","sources":["API/PostService.tsx","webpack://test-tasks-12/./src/Components/GetRequest/GetRequest.module.sass?0bcc","webpack://test-tasks-12/./src/Components/UI/MyCard/MyCard.module.sass?5d7e","Components/UI/MyCard/MyCard.tsx","Components/GetRequest/GetRequestList.jsx","hooks/useUsers.js","hooks/useScroling.jsx","Components/GetRequest/GetRequest.jsx","webpack://test-tasks-12/./src/Components/UI/Loader/Loader.module.css?d3fd","Components/UI/Loader/Loader.jsx","webpack://test-tasks-12/./src/Components/UI/MyButton/MyButton.module.sass?d4c9","Components/UI/MyButton/MyButton.jsx","hooks/useFetching.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { IPositions } from \"../models\";\r\n\r\nexport default class PostService {\r\n    static async getPage(page:number, count:number) {\r\n        const response = await axios.get('https://frontend-test-assignment-api.abz.agency/api/v1/users', {\r\n            params: {\r\n              page: page,\r\n              count: count\r\n          }\r\n        })\r\n    return response;\r\n    }\r\n\r\n    static async getByPositions() {\r\n        const response = await axios.get<IPositions[]>('https://frontend-test-assignment-api.abz.agency/api/v1/positions')\r\n    return response;\r\n    }\r\n\r\n    static async getToken() {\r\n        const response = await axios.get(`https://frontend-test-assignment-api.abz.agency/api/v1/token`)\r\n    return response;\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"simple\":\"GetRequest_simple__ocMDY\",\"getrequest\":\"GetRequest_getrequest__USmaH\",\"getrequest__container\":\"GetRequest_getrequest__container__kdtui\",\"getrequest__btn\":\"GetRequest_getrequest__btn__yKknw\",\"page__end\":\"GetRequest_page__end__rfJgm\",\"page__center\":\"GetRequest_page__center__beyov\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MyCard_card__TzHcw\",\"card__body\":\"MyCard_card__body__+Siv-\",\"card-img\":\"MyCard_card-img__rOv1R\",\"name\":\"MyCard_name__yHeMn\",\"email\":\"MyCard_email__G1DSJ\",\"page\":\"MyCard_page__veTtO\",\"page__end\":\"MyCard_page__end__JOyrh\",\"hoverText\":\"MyCard_hoverText__mg9zT\"};","import React, { FC } from 'react'\r\nimport { IUser } from '../../../models'\r\nimport style from './MyCard.module.sass'\r\n\r\ninterface CardProps{\r\n  User: IUser \r\n}\r\n\r\nconst MyCard = ({User}:CardProps) => {\r\n\r\n \r\n\r\n\r\n  return (\r\n      <div className={style.card}>\r\n        <div className={style.card__body}>\r\n          <div className={style['card-img']}>\r\n            <img src={User.photo} alt=\"false image\" />\r\n          </div>\r\n          <p className={style.name} title={User.name}>{User.name}</p>\r\n          <p className={style.position} title={User.position}>{User.position}</p>\r\n          <p className={style.email} title={User.email}>{User.email}</p>\r\n          <p className={style.tel} title={User.phone}>{User.phone}</p>\r\n        </div>\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default MyCard","import React, { useMemo, useState } from 'react'\r\nimport CardQ from '../UI/MyCard/MyCard';\r\nimport {useSortedPosts} from '../../hooks/useUsers'\r\n\r\nconst GetRequestList = ({users}) => {\r\n\r\n  const [sort, setSort] = useState('registration_timestamp')\r\n  const sortedUsers = useSortedPosts(sort, users)\r\n\r\n\r\n  return (\r\n    <>\r\n    {sortedUsers.map(user=>\r\n      <CardQ User={user} key={user.id}/>  \r\n    )}\r\n  </>\r\n  )\r\n}\r\n\r\nexport default GetRequestList\r\n","import {useMemo} from \"react\";\r\n\r\nexport const useSortedPosts = (sort, users) => {\r\n    const sortedUsers = useMemo(() => {\r\n        if(users) {\r\n            return users.sort((a, b) => (a[sort] > b[sort]) ? -1 : 1)\r\n          }\r\n          return users;\r\n    },[sort, users])\r\n\r\n    return sortedUsers;\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { ScrollContext } from '../context/ScrollContext'\r\nexport const useScroling = () => {\r\n\r\n  const [qq, setQq] = useState(false)\r\n\r\n  const ref = useRef(null)\r\n  const {onScroll} = useContext(ScrollContext)\r\n\r\n  function Scroll(){\r\n    ref.current.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n\r\n  \r\n  useEffect(()=>{ \r\n    if(qq){\r\n      Scroll() \r\n    }\r\n    return setQq(true)\r\n  },[onScroll])\r\n\r\n\r\n  return [ref]\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport PostService from '../../API/PostService'\r\nimport { useFetching } from '../../hooks/useFetching'\r\nimport Loader from '../UI/Loader/Loader'\r\nimport MyButton from '../UI/MyButton/MyButton'\r\nimport style from './GetRequest.module.sass'\r\nimport GetRequestList from './GetRequestList'\r\nimport {useScroling} from '../../hooks/useScroling'\r\n\r\nconst GetRequest = () => {\r\n\r\nconst [mef] = useScroling()\r\n\r\nconst [users, setUser] = useState([])\r\nconst [totalPages, setTotalPages] = useState(0);\r\nconst [count, setCount] = useState(6);\r\nconst [page, setPage] = useState(1);\r\n\r\n\r\n  const [fetchPage, isLoading, error] = useFetching(async (page, count) => {\r\n    const response = await PostService.getPage(page, count)\r\n    setUser([...users, ...response.data.users])\r\n    const totalPages = response.data.total_pages\r\n    setTotalPages(totalPages)\r\n  })\r\n\r\n  useEffect(()=>{\r\n    fetchPage(page, count)\r\n  },[page]) \r\n\r\n\r\n  return (\r\n    <div className={style.getrequest}>\r\n      <h2 id='simple-test' ref={mef}>Working with GET request</h2>\r\n      <div className={style.getrequest__container}>\r\n        <GetRequestList users={users}/>\r\n      </div>\r\n      {isLoading && \r\n      <div className='flex items-center flex-col pt-[50px] pb-[50px]'>\r\n        <Loader/>\r\n      </div> }\r\n      {error && <h1 className='text-center'>Произошла ошибка ${error}</h1> }\r\n      <div className={style.getrequest__btn}>\r\n        <div className={(page)===totalPages ? 'hidden' : ''}>\r\n          <div className='w-[120px]'>\r\n            <MyButton onClick={e=>setPage(page+1)}>\r\n                Show more\r\n            </MyButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GetRequest\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__gyOz7\",\"rotate\":\"Loader_rotate__jdAaD\"};","import React from 'react';\r\nimport cl from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={cl.loader}>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"myBtn\":\"MyButton_myBtn__+q2Fb\"};","import React from 'react';\r\nimport classes from './MyButton.module.sass';\r\n\r\nconst MyButton = ({children, ...props}) => {\r\n    return (\r\n        <button {...props} className={classes.myBtn}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;\r\n","import {useState} from \"react\";\r\nimport { IPositionsGet, IUser } from \"../models\";\r\n\r\nexport const useFetching = (callback:any):[\r\n    ()=>void, boolean, string\r\n] => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const fetching = async (...args:any) => {\r\n        try {\r\n            setIsLoading(true)\r\n            await callback(...args)\r\n        } catch (e:any) {\r\n            setError(e.message);\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return [fetching, isLoading, error]\r\n}\r\n"],"names":["PostService","page","count","axios","params","response","User","className","style","src","photo","alt","title","name","position","email","phone","users","useState","sort","sortedUsers","useMemo","a","b","useSortedPosts","map","user","id","useScroling","qq","setQq","ref","useRef","onScroll","useContext","ScrollContext","useEffect","current","scrollIntoView","behavior","mef","setUser","totalPages","setTotalPages","setPage","useFetching","data","total_pages","fetchPage","isLoading","error","Loader","MyButton","onClick","e","cl","children","props","classes","callback","setIsLoading","setError","fetching","message"],"sourceRoot":""}